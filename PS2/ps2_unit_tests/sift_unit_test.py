#!/usr/bin/python3

import numpy as np
from pathlib import Path
import pdb
import time

from ps2_code.student_sift import (
	get_magnitudes_and_orientations,
	get_feat_vec,
	get_features
)


def test_get_magnitudes_and_orientations():
	"""
	Test to get correct magnitudes and orientations of gradients
	"""
	dx = np.array([[5,0,3,1],[4,2,9,22],[1,2,3,4],[9,8,7,6]])
	dy = np.array([[0,1,3,1],[6,1,4,2],[13,5,3,8],[3,6,2,8]])
	mags = np.array([[ 5.        ,  1.        ,  4.24264069,  1.41421356],
			 [ 7.21110255,  2.23606798,  9.8488578 , 22.09072203],
			 [13.03840481,  5.38516481,  4.24264069,  8.94427191],
			 [ 9.48683298, 10.        ,  7.28010989, 10.        ]])
	oris = np.array([[0.        , 1.57079633, 0.78539816, 0.78539816],
			 [0.98279372, 0.46364761, 0.41822433, 0.09065989],
			 [1.49402444, 1.19028995, 0.78539816, 1.10714872],
			 [0.32175055, 0.64350111, 0.27829966, 0.92729522]])
	student_mags,student_oris= get_magnitudes_and_orientations(dx,dy)

	assert np.allclose(mags, student_mags, atol = 1e-7), 'magnitudes are incorrect'
	assert np.allclose(oris, student_oris, atol = 1e-7), 'orientations are incorrect'

def test_get_feat_vec():
	"""
	Test to get correct magnitudes and orientations of gradients
	"""
	x = 11
	y = 9
	magnitudes = np.array([[1, 1, 5, 6, 7, 4, 9, 5, 6, 4, 8, 1, 2, 9, 5, 7, 0, 1, 7, 6],
			 [4, 4, 2, 3, 4, 4, 3, 4, 4, 4, 6, 5, 4, 3, 3, 4, 0, 7, 7, 7],
			 [0, 8, 1, 6, 7, 1, 1, 9, 4, 8, 2, 6, 0, 6, 3, 5, 8, 3, 0, 9],
			 [3, 6, 8, 5, 5, 1, 8, 6, 4, 0, 2, 2, 8, 7, 8, 2, 9, 1, 7, 3],
			 [3, 4, 3, 8, 8, 1, 0, 1, 4, 2, 0, 5, 2, 4, 5, 0, 2, 4, 1, 4],
			 [5, 6, 4, 3, 3, 1, 5, 3, 6, 7, 7, 6, 8, 4, 1, 3, 4, 8, 7, 6],
			 [1, 7, 1, 8, 3, 1, 7, 9, 5, 1, 3, 4, 5, 8, 1, 0, 7, 4, 7, 8],
			 [5, 3, 6, 2, 4, 7, 7, 7, 0, 0, 8, 8, 5, 4, 0, 6, 2, 5, 6, 1],
			 [2, 2, 7, 8, 3, 6, 4, 3, 1, 3, 9, 0, 5, 5, 2, 3, 6, 1, 0, 7],
			 [8, 8, 1, 0, 2, 0, 1, 5, 5, 5, 5, 2, 2, 7, 9, 8, 4, 3, 5, 7],
			 [3, 5, 1, 5, 8, 8, 0, 9, 7, 2, 3, 7, 2, 7, 7, 2, 4, 1, 7, 9],
			 [1, 5, 8, 1, 4, 6, 3, 2, 5, 0, 9, 1, 5, 9, 7, 1, 7, 0, 8, 7],
			 [6, 1, 5, 1, 5, 8, 7, 0, 9, 7, 6, 4, 1, 1, 3, 6, 6, 7, 7, 7],
			 [6, 0, 6, 6, 3, 3, 7, 0, 3, 8, 4, 6, 2, 0, 7, 9, 4, 5, 9, 8],
			 [3, 4, 1, 1, 8, 6, 1, 7, 0, 1, 0, 3, 2, 2, 6, 7, 5, 5, 5, 7],
			 [7, 8, 8, 6, 2, 4, 7, 7, 0, 3, 2, 8, 8, 0, 8, 1, 1, 0, 7, 4],
			 [3, 3, 9, 1, 1, 7, 2, 6, 3, 7, 5, 3, 5, 3, 9, 5, 9, 2, 7, 4],
			 [1, 6, 1, 9, 5, 3, 1, 4, 2, 8, 7, 1, 1, 7, 6, 6, 7, 5, 8, 1],
			 [0, 6, 4, 2, 7, 9, 3, 6, 3, 4, 4, 0, 5, 5, 3, 9, 5, 0, 5, 9],
			 [2, 4, 3, 2, 5, 7, 4, 4, 9, 8, 4, 8, 8, 3, 8, 6, 6, 8, 5, 2]])
	orientations = (np.array([[8, 6, 2, 1, 7, 4, 8, 8, 5, 7, 7, 5, 3, 8, 9, 9, 8, 7, 2, 7],
			 [2, 0, 1, 3, 7, 1, 7, 5, 1, 2, 5, 2, 7, 0, 4, 3, 8, 9, 6, 8],
			 [9, 1, 8, 6, 8, 8, 6, 7, 3, 0, 1, 4, 6, 3, 9, 0, 9, 2, 5, 8],
			 [0, 4, 1, 5, 4, 5, 3, 5, 8, 1, 8, 4, 2, 0, 4, 8, 0, 1, 6, 2],
			 [8, 0, 6, 0, 5, 6, 1, 7, 7, 9, 4, 3, 1, 5, 1, 9, 7, 2, 9, 9],
			 [2, 6, 0, 9, 4, 6, 3, 4, 2, 2, 2, 1, 3, 2, 7, 1, 7, 8, 5, 2],
			 [4, 5, 2, 5, 2, 6, 1, 0, 1, 4, 5, 2, 5, 8, 7, 6, 7, 3, 9, 0],
			 [9, 1, 9, 0, 4, 5, 7, 7, 2, 8, 1, 4, 2, 3, 2, 6, 7, 0, 0, 2],
			 [6, 4, 7, 5, 0, 6, 8, 9, 6, 2, 4, 8, 8, 9, 2, 4, 4, 8, 3, 5],
			 [6, 9, 5, 4, 8, 6, 3, 5, 4, 9, 5, 9, 4, 2, 5, 0, 9, 1, 2, 6],
			 [8, 2, 9, 6, 8, 1, 1, 5, 8, 3, 1, 4, 4, 3, 8, 0, 0, 4, 8, 0],
			 [4, 1, 5, 1, 0, 3, 3, 6, 1, 1, 8, 2, 8, 7, 8, 1, 4, 8, 1, 3],
			 [4, 7, 1, 4, 8, 5, 1, 8, 2, 7, 2, 0, 7, 2, 2, 5, 9, 3, 7, 8],
			 [7, 8, 5, 6, 0, 2, 3, 8, 3, 6, 7, 5, 3, 7, 8, 2, 3, 6, 1, 8],
			 [5, 0, 6, 6, 4, 7, 1, 0, 6, 0, 1, 7, 8, 6, 0, 5, 6, 0, 8, 4],
			 [1, 8, 3, 7, 9, 6, 0, 9, 6, 6, 6, 8, 4, 6, 5, 3, 6, 2, 3, 9],
			 [4, 4, 5, 1, 4, 2, 9, 7, 3, 0, 0, 0, 5, 6, 2, 2, 8, 9, 7, 3],
			 [0, 7, 3, 3, 6, 2, 4, 6, 7, 1, 0, 6, 2, 6, 2, 1, 5, 0, 8, 8],
			 [0, 7, 7, 3, 3, 4, 2, 6, 8, 1, 1, 2, 2, 3, 4, 9, 3, 8, 7, 1],
			 [4, 0, 9, 0, 0, 4, 1, 0, 0, 2, 2, 8, 8, 9, 9, 7, 6, 1, 6, 0]])/5.- 1)*np.pi

	ans = np.array([0.1242027 , 0.        , 0.11484744, 0.05648601, 0.21431291,
			 0.07646385, 0.08622812, 0.        , 0.14268659, 0.0462085 ,
			 0.0462085 , 0.        , 0.16090736, 0.14268659, 0.06655858,
			 0.02476252, 0.16993074, 0.13348023, 0.11484744, 0.18782187,
			 0.0462085 , 0.0462085 , 0.        , 0.03566786, 0.15182736,
			 0.07646385, 0.0462085 , 0.        , 0.14268659, 0.02476252,
			 0.02476252, 0.16090736, 0.1242027 , 0.03566786, 0.05648601,
			 0.07646385, 0.29180548, 0.07646385, 0.0462085 , 0.03566786,
			 0.21431291, 0.22306065, 0.        , 0.13348023, 0.0462085 ,
			 0.07646385, 0.        , 0.03566786, 0.06655858, 0.15182736,
			 0.1242027 , 0.08622812, 0.05648601, 0.02476252, 0.13348023,
			 0.05648601, 0.14268659, 0.        , 0.0462085 , 0.09587076,
			 0.13348023, 0.13348023, 0.09587076, 0.07646385, 0.19669572,
			 0.        , 0.10540663, 0.01326991, 0.13348023, 0.        ,
			 0.15182736, 0.        , 0.08622812, 0.15182736, 0.02476252,
			 0.05648601, 0.20552529, 0.07646385, 0.16090736, 0.05648601,
			 0.0462085 , 0.1242027 , 0.07646385, 0.11484744, 0.09587076,
			 0.10540663, 0.18782187, 0.02476252, 0.24908291, 0.05648601,
			 0.07646385, 0.08622812, 0.06655858, 0.07646385, 0.07646385,
			 0.10540663, 0.1242027 , 0.10540663, 0.07646385, 0.09587076,
			 0.11484744, 0.1242027 , 0.        , 0.0462085 , 0.19669572,
			 0.        , 0.06655858, 0.        , 0.13348023, 0.10540663,
			 0.        , 0.07646385, 0.09587076, 0.09587076, 0.02476252,
			 0.08622812, 0.23177043, 0.03566786, 0.16993074, 0.        ,
			 0.14268659, 0.14268659, 0.1242027 , 0.        , 0.17890117,
			 0.07646385, 0.14268659, 0.02476252])
	
	feat_vec= get_feat_vec(x,y, magnitudes, orientations, 16)
	assert np.allclose(feat_vec, ans, atol = 1e-7), 'feature is incorrect'

def test_get_features():
	x = np.array([11,10,9,12])
	y = np.array([9,11,11,10])
	image = np.array([[1, 1, 5, 6, 7, 4, 9, 5, 6, 4, 8, 1, 2, 9, 5, 7, 0, 1, 7, 6],
			 [4, 4, 2, 3, 4, 4, 3, 4, 4, 4, 6, 5, 4, 3, 3, 4, 0, 7, 7, 7],
			 [0, 8, 1, 6, 7, 1, 1, 9, 4, 8, 2, 6, 0, 6, 3, 5, 8, 3, 0, 9],
			 [3, 6, 8, 5, 5, 1, 8, 6, 4, 0, 2, 2, 8, 7, 8, 2, 9, 1, 7, 3],
			 [3, 4, 3, 8, 8, 1, 0, 1, 4, 2, 0, 5, 2, 4, 5, 0, 2, 4, 1, 4],
			 [5, 6, 4, 3, 3, 1, 5, 3, 6, 7, 7, 6, 8, 4, 1, 3, 4, 8, 7, 6],
			 [1, 7, 1, 8, 3, 1, 7, 9, 5, 1, 3, 4, 5, 8, 1, 0, 7, 4, 7, 8],
			 [5, 3, 6, 2, 4, 7, 7, 7, 0, 0, 8, 8, 5, 4, 0, 6, 2, 5, 6, 1],
			 [2, 2, 7, 8, 3, 6, 4, 3, 1, 3, 9, 0, 5, 5, 2, 3, 6, 1, 0, 7],
			 [8, 8, 1, 0, 2, 0, 1, 5, 5, 5, 5, 2, 2, 7, 9, 8, 4, 3, 5, 7],
			 [3, 5, 1, 5, 8, 8, 0, 9, 7, 2, 3, 7, 2, 7, 7, 2, 4, 1, 7, 9],
			 [1, 5, 8, 1, 4, 6, 3, 2, 5, 0, 9, 1, 5, 9, 7, 1, 7, 0, 8, 7],
			 [6, 1, 5, 1, 5, 8, 7, 0, 9, 7, 6, 4, 1, 1, 3, 6, 6, 7, 7, 7],
			 [6, 0, 6, 6, 3, 3, 7, 0, 3, 8, 4, 6, 2, 0, 7, 9, 4, 5, 9, 8],
			 [3, 4, 1, 1, 8, 6, 1, 7, 0, 1, 0, 3, 2, 2, 6, 7, 5, 5, 5, 7],
			 [7, 8, 8, 6, 2, 4, 7, 7, 0, 3, 2, 8, 8, 0, 8, 1, 1, 0, 7, 4],
			 [3, 3, 9, 1, 1, 7, 2, 6, 3, 7, 5, 3, 5, 3, 9, 5, 9, 2, 7, 4],
			 [1, 6, 1, 9, 5, 3, 1, 4, 2, 8, 7, 1, 1, 7, 6, 6, 7, 5, 8, 1],
			 [0, 6, 4, 2, 7, 9, 3, 6, 3, 4, 4, 0, 5, 5, 3, 9, 5, 0, 5, 9],
			 [2, 4, 3, 2, 5, 7, 4, 4, 9, 8, 4, 8, 8, 3, 8, 6, 6, 8, 5, 2]]).astype(np.float64)

	ans = np.array([[0.12511005, 0.05393461, 0.13021245, 0.10886724, 0.07768724,
				0.08168903, 0.        , 0.16126009, 0.03104752, 0.25236135,
				0.07103869, 0.01185191, 0.01619019, 0.10408735, 0.11497689,
				0.        , 0.05414335, 0.13826904, 0.05881463, 0.05839572,
				0.05337288, 0.14484341, 0.0481139 , 0.04405708, 0.0834664 ,
				0.03758919, 0.1009343 , 0.16786614, 0.04976325, 0.04614001,
				0.14406492, 0.02445259, 0.07074774, 0.11473372, 0.16455568,
				0.        , 0.11650646, 0.16122654, 0.00867611, 0.0736246 ,
				0.184025  , 0.11093065, 0.0678207 , 0.04787259, 0.20871032,
				0.1258316 , 0.05244491, 0.05396941, 0.18780115, 0.07755315,
				0.04202345, 0.05067644, 0.0275169 , 0.01185191, 0.14220143,
				0.12254189, 0.02890284, 0.        , 0.17367516, 0.04563016,
				0.22455437, 0.09297448, 0.05637752, 0.03948245, 0.        ,
				0.0270355 , 0.03225167, 0.09919737, 0.08120599, 0.15092147,
				0.        , 0.27275823, 0.06233263, 0.05134835, 0.        ,
				0.13871085, 0.09432787, 0.13557535, 0.09161065, 0.04226115,
				0.16472412, 0.03948245, 0.13999269, 0.0935152 , 0.20402241,
				0.        , 0.04378816, 0.12426391, 0.07776478, 0.05963168,
				0.        , 0.        , 0.28684448, 0.128276  , 0.10773634,
				0.03377646, 0.05244491, 0.        , 0.14108452, 0.04407195,
				0.06466773, 0.06013914, 0.        , 0.11769437, 0.05642616,
				0.17809915, 0.05414335, 0.11093065, 0.        , 0.20001941,
				0.        , 0.18803585, 0.        , 0.08133275, 0.05637752,
				0.07164186, 0.29684557, 0.103936  , 0.        , 0.17344254,
				0.03522144, 0.13626684, 0.11588768, 0.11463837, 0.03693159,
				0.07790819, 0.12466396, 0.09499765],
			 [0.17968672, 0.00682433, 0.10996578, 0.        , 0.        ,
				0.10623204, 0.01739605, 0.14881535, 0.08793271, 0.17702179,
				0.13709604, 0.07601708, 0.08332936, 0.19439196, 0.10936849,
				0.05798908, 0.07536827, 0.05038469, 0.06246505, 0.0921707 ,
				0.0815611 , 0.16606946, 0.03629216, 0.06245746, 0.14808884,
				0.11131627, 0.14426695, 0.08991531, 0.15948865, 0.04704953,
				0.03629216, 0.05727239, 0.        , 0.10612703, 0.17382467,
				0.        , 0.05038469, 0.18063615, 0.        , 0.19854279,
				0.17874788, 0.18436061, 0.0346538 , 0.09009002, 0.1919655 ,
				0.09394993, 0.11668822, 0.        , 0.09366233, 0.12908689,
				0.02904912, 0.05445085, 0.29787986, 0.        , 0.04902872,
				0.08193086, 0.16807556, 0.06407309, 0.06106065, 0.        ,
				0.08473578, 0.05993349, 0.13881515, 0.09425949, 0.        ,
				0.02904912, 0.04706658, 0.15910915, 0.10123813, 0.        ,
				0.04733848, 0.11285792, 0.10915418, 0.09707152, 0.05817598,
				0.14649127, 0.07438205, 0.08489321, 0.03629216, 0.19914276,
				0.05564776, 0.13916598, 0.15041944, 0.09678165, 0.11257184,
				0.07490884, 0.        , 0.20239237, 0.1013819 , 0.14641608,
				0.06937145, 0.15352471, 0.10384239, 0.13783007, 0.09945912,
				0.0237637 , 0.0346538 , 0.05143817, 0.09570352, 0.12558361,
				0.        , 0.1009487 , 0.06564039, 0.21015329, 0.        ,
				0.04242312, 0.06100066, 0.08193718, 0.03784475, 0.25247713,
				0.06491564, 0.11040246, 0.1270869 , 0.05420758, 0.06057655,
				0.10408137, 0.10683027, 0.17154304, 0.06735065, 0.15739105,
				0.05795169, 0.        , 0.0646881 , 0.01923358, 0.1176645 ,
				0.09444334, 0.14017287, 0.13800204],
			 [0.13831905, 0.00661252, 0.11883673, 0.05827989, 0.        ,
				0.03850788, 0.00903297, 0.12864825, 0.12266401, 0.12016057,
				0.07176462, 0.07365773, 0.08074306, 0.24505767, 0.03845065,
				0.06776858, 0.        , 0.06265922, 0.12239501, 0.08930999,
				0.05957556, 0.16091515, 0.10923164, 0.01863662, 0.1644191 ,
				0.14736659, 0.10508592, 0.0871246 , 0.17221964, 0.        ,
				0.        , 0.10825597, 0.        , 0.12495472, 0.10104245,
				0.03009167, 0.        , 0.20097991, 0.        , 0.12330486,
				0.17320007, 0.15745465, 0.10633163, 0.07302906, 0.07509573,
				0.09103399, 0.11306655, 0.11683301, 0.03232457, 0.14677046,
				0.02814752, 0.06749062, 0.32408813, 0.        , 0.        ,
				0.07938796, 0.19236157, 0.06208444, 0.00903297, 0.        ,
				0.16945498, 0.05807333, 0.15704045, 0.09133395, 0.01364281,
				0.02814752, 0.04894238, 0.16430587, 0.09809599, 0.        ,
				0.10768413, 0.06493224, 0.10576635, 0.        , 0.03009167,
				0.16454825, 0.07207345, 0.03232457, 0.        , 0.23314641,
				0.05392061, 0.21395466, 0.05637036, 0.09377783, 0.        ,
				0.11962015, 0.03516575, 0.1961107 , 0.0982353 , 0.14187175,
				0.14575086, 0.10930334, 0.19567225, 0.04984168, 0.0963722 ,
				0.02302614, 0.03357824, 0.04984168, 0.14040016, 0.16239267,
				0.        , 0.12392577, 0.06360311, 0.10690686, 0.        ,
				0.04110643, 0.07803548, 0.04960951, 0.03667016, 0.11121406,
				0.06290085, 0.203695  , 0.12314249, 0.05252514, 0.05869643,
				0.10889725, 0.05910738, 0.26033645, 0.06526028, 0.15250609,
				0.05615304, 0.        , 0.02864872, 0.06079764, 0.12599256,
				0.07712875, 0.12979163, 0.13371886],
			 [0.16027465, 0.05715109, 0.06606206, 0.06780474, 0.07445556,
				0.17454279, 0.00831519, 0.1545519 , 0.02975599, 0.1863675 ,
				0.06032396, 0.04222437, 0.02637223, 0.16114343, 0.09755311,
				0.01715572, 0.09473067, 0.13565654, 0.04963597, 0.        ,
				0.07815115, 0.12720488, 0.07335325, 0.05571   , 0.17316274,
				0.        , 0.05403229, 0.12205546, 0.06780474, 0.04196664,
				0.13773101, 0.13199647, 0.03633566, 0.14494299, 0.1342967 ,
				0.        , 0.1338585 , 0.15727643, 0.        , 0.10677618,
				0.1708987 , 0.11514127, 0.06499945, 0.05951499, 0.20002827,
				0.01135889, 0.10408206, 0.04196664, 0.11801665, 0.        ,
				0.04027533, 0.04856837, 0.19047627, 0.0534587 , 0.1445617 ,
				0.09631674, 0.2084666 , 0.        , 0.16645052, 0.04373201,
				0.12150078, 0.        , 0.01930561, 0.1413462 , 0.07148242,
				0.        , 0.02770053, 0.20136293, 0.07552167, 0.07540752,
				0.        , 0.20927986, 0.10209953, 0.18755857, 0.        ,
				0.07794943, 0.09040397, 0.07776247, 0.03237141, 0.11779312,
				0.11798104, 0.08883452, 0.1341692 , 0.08962511, 0.23160326,
				0.04588116, 0.02235021, 0.07132177, 0.22679652, 0.        ,
				0.        , 0.07501577, 0.2048279 , 0.08521845, 0.07125262,
				0.17302972, 0.        , 0.03784003, 0.11411978, 0.03779432,
				0.03375628, 0.10146219, 0.01715572, 0.15561271, 0.13811074,
				0.        , 0.09883223, 0.10162176, 0.05441059, 0.22132798,
				0.        , 0.09466887, 0.        , 0.11147358, 0.02637223,
				0.16294609, 0.12044581, 0.06681623, 0.05169101, 0.16400623,
				0.27817242, 0.06908527, 0.13876336, 0.05198491, 0.03539529,
				0.07466732, 0.0761021 , 0.11416431]])

	feat_vecs = get_features(image,x,y,16)
	feat_vecs2 = get_features(-1*image,x,y,16)
	assert np.allclose(feat_vecs, ans, atol = 1e-7) or np.allclose(feat_vecs2, ans, atol = 1e-7), 'feature is incorrect'




